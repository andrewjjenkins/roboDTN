roboDTN
=======
Andrew Jenkins <andrewjjenkins@gmail.com>

Introduction
------------

roboDTN is an Android implementation of the Bundle Protocol (specified in
RFC5050) and related Disruption-Tolerant Networking protocols and technologies.
Android is a mobile platform based on the Linux kernel that is finding
widespread use in cellular handsets, smartphones, tablets, and other mobile
computing.  roboDTN, like most applications for Android, is written in Java,
using the Android API.

Disruption-Tolerant Networking (DTN) is a technology enabling communication in
networks with high delays, periods of disruption, and topologies that change
more rapidly than end-to-end communication latency.  In these networks,
traditional Internet Protocol approaches are inefficient or unsuccessful.  One
DTN environment is space communication (where topologies are often predictable
but disruptions are severe, preventing concurrent end-to-end communication).

The Bundle Protocol defined in RFC5050 defines a format for bundling data into
units called bundles, and processing steps for forwarding these bundles from
source to destination.  It does not specify routing, security, or naming,
leaving these open to other specifications and experimentation.  It
encapsulates lower-level transmission and reception of bundles in its 
"convergence layer adapter" concept.

roboDTN is an in-progress implementation of the Bundle Protocol, related
specifications, and experimental designs.  It is intended to be compatible with
Android APIs 2.0 and higher (in the future, some features may require more
advanced Android APIs).  It comes with an extensive Android JUnit test suite.


Structure
---------

roboDTN/            The main roboDTN application and code for bundling,
                    database access, application API, convergence layers.
roboDTNTest/        Test suite for roboDTN.
SDNV/               Simple application for working with SDNVs.
sdnvlib/            Library code for SDNVs shared by roboDTN and SDNV app.
sdnvlibTest/        Test suite for sdnvlib.

The project is developed inside the Eclipse IDE with the Android toolkit, but
built on buildbot using Ant so either style of build system is supported.

COPYING
-------

roboDTN is licensed under the Apache Public License 2.0 (see the COPYING file).

Copyright 2010 Andrew Jenkins

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Contributing
------------

The project's code is on github.  Feel free to submit pull requests, or branch
for your own experimental development.

 http://github.com/andrewjjenkins/roboDTN
